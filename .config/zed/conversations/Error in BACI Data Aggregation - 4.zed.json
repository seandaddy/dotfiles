{"id":"2afbdbd1-1887-4e86-9ce1-069086edfab3","zed":"context","version":"0.4.0","text":"\n\n\n# %%\nfrom baci import baci_to_parquet, aggregate_baci\n\nhs = 'HS17'             # Change this!\nyear = '2023'           # Change this!\nrelease = '202501'      # Change this!\n\n# %%\nbaci_to_parquet(hs=hs, release=release)\n\nimport duckdb\n\nduckdb.sql(\"SELECT * FROM 'final/BACI_HS17_V202501.parquet' LIMIT 10\").df()\n\n      t  i   j       k       v       q\n      0  2023  4  20  200290   8.013   5.830\n      1  2023  4  24  252220  21.928  64.909\n      2  2023  4  24  293629   0.128   0.004\n      3  2023  4  24  330300   0.738   0.296\n      4  2023  4  24  330499   0.387   0.048\n      5  2023  4  24  420299   0.734   0.023\n      6  2023  4  24  620443   0.180   0.008\n      7  2023  4  24  620990   0.157   0.004\n      8  2023  4  24  840991   0.392   0.041\n      9  2023  4  24  847130   0.924   0.022\n      \n      # %%\naggregate_baci(\n    input=f'final/BACI_{hs}_Y{year}_V{release}.parquet',\n    output=f'final/BACI_{hs}_Y{year}_V{release}-2digit.parquet',\n    aggregation='2digit'\n)\n\n---------------------------------------------------------------------------\nIOException                               Traceback (most recent call last)\nCell In[3], line 2\n      1 # %%\n----> 2 aggregate_baci(\n      3     input=f'final/BACI_{hs}_Y{year}_V{release}.parquet',\n      4     output=f'final/BACI_{hs}_Y{year}_V{release}-2digit.parquet',\n      5     aggregation='2digit'\n      6 )\nFile ~/Desktop/DAAN 846/python/baci.py:29, in aggregate_baci(input, output, aggregation)\n     26 def aggregate_baci(input, output, aggregation='country'):\n     28     if aggregation == '2digit':\n---> 29         duckdb.sql(\n     30             f\"\"\"\n     31             COPY (\n     32                 SELECT t, i, j, k2, SUM(v) AS v\n     33                 FROM (SELECT t, i, j, SUBSTRING(k, -6, 2) AS k2, v FROM '{input}')\n     34                 GROUP BY t, i, j, k2\n     35                 ORDER BY t\n     36             ) TO '{output}'\n     37             \"\"\"\n     38         )\n     40     elif aggregation == '4digit':\n     41         duckdb.sql(\n     42             f\"\"\"\n     43             COPY (\n   (...)\n     49             \"\"\"\n     50         )\nIOException: IO Error: No files found that match the pattern \"final/BACI_HS17_Y2023_V202501.parquet\"\nThe error message indicates that the file `final/BACI_HS17_Y2023_V202501.parquet` does not exist or cannot be found. This could be due to a few reasons such as a typo in the file name, the file not being created successfully, or the file being located in a different directory.\n\nHere are a few steps to troubleshoot and resolve the issue:\n\n1. **Check File Creation**: Ensure that the `baci_to_parquet` function successfully created the file `final/BACI_HS17_Y2023_V202501.parquet`. You can do this by listing the files in the `final` directory.\n\n2. **Verify File Path**: Make sure that the file path is correct and that the file exists in the specified directory.\n\n3. **Check for Typos**: Ensure there are no typos in the file name or path.\n\n4. **Debugging**: Add a print statement to check the exact file path being used.\n\nHere is an updated version of your code with additional checks:\n\n```python\n# %%\nfrom baci import baci_to_parquet, aggregate_baci\nimport os\n\nhs = 'HS17'             # Change this!\nyear = '2023'           # Change this!\nrelease = '202501'      # Change this!\n\n# %%\nbaci_to_parquet(hs=hs, release=release)\n\n# Check if the file was created successfully\nfile_path = f'final/BACI_{hs}_Y{year}_V{release}.parquet'\nif os.path.exists(file_path):\n    print(f\"File {file_path} exists.\")\nelse:\n    print(f\"File {file_path} does not exist.\")\n\nimport duckdb\n\n# Check the contents of the file\ntry:\n    df = duckdb.sql(f\"SELECT * FROM '{file_path}' LIMIT 10\").df()\n    print(df)\nexcept Exception as e:\n    print(f\"Error reading the file: {e}\")\n\n# %%\ntry:\n    aggregate_baci(\n        input=file_path,\n        output=f'final/BACI_{hs}_Y{year}_V{release}-2digit.parquet',\n        aggregation='2digit'\n    )\nexcept Exception as e:\n    print(f\"Error during aggregation: {e}\")\n```\n\nThis code includes checks to verify if the file exists and attempts to read the file before performing the aggregation. If the file does not exist, it will print an appropriate message. If there is an error during the aggregation, it will also print the error message. This should help you identify and resolve the issue.\n","messages":[{"id":{"replica_id":0,"value":0},"start":0,"metadata":{"role":"user","status":"Done","timestamp":{"replica_id":0,"value":439}}},{"id":{"replica_id":0,"value":17},"start":2230,"metadata":{"role":"assistant","status":"Done","timestamp":{"replica_id":0,"value":440}}},{"id":{"replica_id":0,"value":18},"start":4336,"metadata":{"role":"user","status":"Done","timestamp":{"replica_id":0,"value":441}}}],"summary":"Error in BACI Data Aggregation","slash_command_output_sections":[{"range":{"start":0,"end":1},"icon":"Library","label":"Default","metadata":null}]}